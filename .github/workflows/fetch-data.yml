name: Fetch Electrometer Data

on:
  workflow_dispatch:
  schedule:
    - cron: '*/10 * * * *'

jobs:
  fetch:
    runs-on: ubuntu-latest

    # job-level injection: all steps will see these
    env:
      ELECTROMETERSETTINGS__BASEURL:      ${{ secrets.ELECTROMETERSETTINGS__BASEURL }}
      ELECTROMETERSETTINGS__LOGINURL:     ${{ secrets.ELECTROMETERSETTINGS__LOGINURL }}
      ELECTROMETERSETTINGS__USERNAME:     ${{ secrets.ELECTROMETERSETTINGS__USERNAME }}
      ELECTROMETERSETTINGS__PASSWORD:     ${{ secrets.ELECTROMETERSETTINGS__PASSWORD }}
      ELECTROMETERSETTINGS__SYSSN:        ${{ secrets.ELECTROMETERSETTINGS__SYSSN }}
      ELECTROMETERSETTINGS__STATIONID:    ${{ secrets.ELECTROMETERSETTINGS__STATIONID }}
      DATABASE__CONNECTIONSTRING:         ${{ secrets.DATABASE__CONNECTIONSTRING }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: üîç Dump Electrometer env
        run: |
          echo "BASEURL='$ELECTROMETERSETTINGS__BASEURL'"
          echo "LOGINURL='$ELECTROMETERSETTINGS__LOGINURL'"
          echo "USERNAME='$ELECTROMETERSETTINGS__USERNAME'"
          echo "PASSWORD='$ELECTROMETERSETTINGS__PASSWORD'"
          echo "SYSSN='$ELECTROMETERSETTINGS__SYSSN'"
          echo "STATIONID='$ELECTROMETERSETTINGS__STATIONID'"
          echo "DB='$DATABASE__CONNECTIONSTRING'"

      - name: Restore & Build
        run: dotnet build ElektrometerService.sln --configuration Release

      - name: Run fetcher
        run: dotnet run --project ElektrometerService/ElektrometerService.csproj --configuration Release
